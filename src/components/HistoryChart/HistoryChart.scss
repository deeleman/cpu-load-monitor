@import 'toolkit';

$component-height: 240px; // Keep in sync with values defined in component function

.chart {
  margin: 10px 15px;
  height: $component-height;
  border-radius: 10px;
  background: getTheme(chartBottomColor);
  background: linear-gradient(0deg, getTheme(chartBottomColor) 20%, getTheme(chartTopColor) 100%);

  &__items {
    position: relative;
    display: flex;
    flex-direction: row-reverse;
    justify-content: space-between;
    align-items: flex-end;
    height: $component-height;
    list-style-type: none;
    margin: 0;
    padding: 0 5px;
    background-image: linear-gradient(getTheme(mainBackgroundColor) .1em, transparent .1em);
    background-size: $component-height/7 $component-height/7;

    &::after {
      display: block;
      position: absolute;
      top: 4 + $component-height / 2.9;
      left: 5px;
      right: 5px;
      content: 'heavy load threshold';
      color: getTheme(thresholdLabelColor);
      font-size: 12px;
      padding-bottom: 4px;
      text-align: center;
      border-bottom: 1px dashed getTheme(thresholdLineColor);
    }
  }

  &__item {
    display: block;
    position: relative;
    align-self: flex-end;
    border-radius: 3px;
    border-top-left-radius: 10px;
    border-top-right-radius: 10px;
    width: 100%;
    height: 1px;
    max-height: $component-height;
    min-width: 1px;
    margin: 1px;
    transition: height 1s ease-in;
    background: getTheme(chartBarNormal);
    background: linear-gradient(0deg, getTheme(chartBarNormal) 40%, getTheme(chartBarWarning) 49%, getTheme(chartBarDanger) 54%, getTheme(chartBarOverflow) 83%);
    background-position: center bottom;
    background-size: 100% $component-height;

    &:hover {
      background: getTheme(chartBarMouseover);
      cursor: pointer;
    }

    &-time {
      position: absolute;
      bottom: -10px;
      left: 50%;
      margin-top: 10px;
      transform: translate(-50%, 100%);
      padding: 4px 8px;
      background: getTheme(overlayBackground);
      font-size: 12px;
      text-align: center;
      border-radius: 4px;
      visibility: hidden;
      opacity: 0;
      transition: opacity 0.6s;
      z-index: 1000;
      color: getTheme(overlayText);

      strong {
        display: block;
        color: getTheme(overlayHighlightedText);
        padding-bottom: 5px;
      }
  
      i {
        position:absolute;
        bottom: 100%;
        left: 50%;
        margin-left: -5px;
        width: 10px;
        height: 5px;
        overflow: hidden;

        &::after {
          content:'';
          position: absolute;
          width: 5px;
          height: 5px;
          left: 50%;
          transform: translate(-50%,50%) rotate(45deg);
          background: getTheme(overlayBackground);
        }
      }
    }

    &:hover &-time {
      visibility: visible;
      opacity: 1;
    }
  }
}
